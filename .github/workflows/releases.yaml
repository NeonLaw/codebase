---
name: releases

on:
  release:
    types:
      - published

jobs:
  update_git_flow_package:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/git_flow@')

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1

      - name: Login to Crates
        run: doppler run -- cargo login $(doppler secrets get CRATES_API_KEY --plain)
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRODUCTION }}

      - name: Publish Git Flow
        run: cargo publish
        working-directory: ./git_flow

  update_i18n_package:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/i18n@')

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1
      - name: Login to NPM
        run: doppler run -- npm config set //registry.npmjs.org/:_authToken $(doppler secrets get NPM_AUTH_TOKEN --plain)
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRODUCTION }}
      - name: Publish @neonlaw/i18n
        run: npm publish --access public
        working-directory: ./i18n

  update_neon_nlp_package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1

      - name: Login to Crates
        run: doppler run -- cargo login $(doppler secrets get CRATES_API_KEY --plain)
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRODUCTION }}
        if: startsWith(github.ref, 'refs/tags/neon_nlp@')

      - name: Publish Neon NLP
        run: cargo publish
        if: startsWith(github.ref, 'refs/tags/neon_nlp@')
        working-directory: ./neon_nlp

  update_web_package:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/web@')

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1
      - name: Login to NPM
        run: doppler run -- npm config set //registry.npmjs.org/:_authToken $(doppler secrets get NPM_AUTH_TOKEN --plain)
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRODUCTION }}
      - name: Publish @neonlaw/web
        run: npm publish --access public
        working-directory: ./web
      - name: Update www.neonlaw.com
        uses: amondnet/vercel-action@v20.0.0
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          working-directory: ./web

  update_server_package:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/web@')

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1
      - name: Login to NPM
        run: doppler run -- npm config set //registry.npmjs.org/:_authToken $(doppler secrets get NPM_AUTH_TOKEN --plain)
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRODUCTION }}
