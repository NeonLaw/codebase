---
name: continuous_integration

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  test_suite:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: localhost
          POSTGRES_DB: neon_law
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Install third-party dependencies.
        run: |
          yarn install --ignore-optional
      - name: Lint Markdown files.
        run: yarn markdown-lint
      - name: Lint JavaScript files.
        run: yarn lint
      - name: Type-check TypeScript Files.
        run: yarn check-types
      - name: Run Migrations
        run: yarn migrate
        working-directory: ./packages/api
        env:
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/neon_law
      - name: Run PGRita checks
        uses: pgrita/action@main
        env:
          PGRITA_TOKEN: ${{ secrets.PGRITA_TOKEN }}
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/postgres
        with:
          project: neonlaw/codebase
      - name: Run Jest tests and publish coverage to Code Climate.
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
          DATABASE_URL: postgres://postgres:password@localhost:5432/neon_law
        with:
          coverageCommand: yarn test
  graphql-codegen-file-spec:
    runs-on: ubuntu-latest
    env:
      AUTH0_CLIENT_ID: ${{ secrets.LOGIC_AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.LOGIC_AUTH0_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.GPR_USERNAME }}
          password: ${{ secrets.GPR_PERSONAL_ACCESS_TOKEN }}
      - name: Run Docker Compose
        run: docker-compose up -d
      - name: Sleep for 1200 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '1200s'
      - name: Run Graphql-Codegen
        run: docker exec shell yarn graphql-codegen
      - name: Check if git diff changed
        run: git diff --exit-code ./packages/shared-ui/src/utils/api.tsx
  interface_e2e:
    runs-on: ubuntu-latest
    env:
      AUTH0_CLIENT_ID: ${{ secrets.LOGIC_AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.LOGIC_AUTH0_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.GPR_USERNAME }}
          password: ${{ secrets.GPR_PERSONAL_ACCESS_TOKEN }}
      - name: Run Cypress tests with built application
        uses: cypress-io/github-action@v1
        with:
          start: docker-compose -f ../../docker-compose.yml up postgres interface
          wait-on: "http://127.0.0.1:8000"
          wait-on-timeout: 1500
          working-directory: ./packages/interface
        env:
          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
          CYPRESS_AUTH_URL: ${{ secrets.CYPRESS_AUTH_URL }}
          CYPRESS_PORTAL_USER_PASSWORD: ${{ secrets.CYPRESS_PORTAL_USER_PASSWORD }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD }}
  law_job_resources_e2e:
    runs-on: ubuntu-latest
    env:
      AUTH0_CLIENT_ID: ${{ secrets.LOGIC_AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.LOGIC_AUTH0_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.GPR_USERNAME }}
          password: ${{ secrets.GPR_PERSONAL_ACCESS_TOKEN }}
      - name: Run Cypress tests with built application
        uses: cypress-io/github-action@v1
        with:
          start: docker-compose -f ../../docker-compose.yml up postgres law_job_resources
          wait-on: "http://127.0.0.1:5000"
          wait-on-timeout: 1500
          working-directory: ./packages/law-job-resources
        env:
          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
          CYPRESS_AUTH_URL: ${{ secrets.CYPRESS_AUTH_URL }}
          CYPRESS_PORTAL_USER_PASSWORD: ${{ secrets.CYPRESS_PORTAL_USER_PASSWORD }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD }}
  justice_for_rickie_slaughter_e2e:
    runs-on: ubuntu-latest
    env:
      AUTH0_CLIENT_ID: ${{ secrets.LOGIC_AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.LOGIC_AUTH0_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.GPR_USERNAME }}
          password: ${{ secrets.GPR_PERSONAL_ACCESS_TOKEN }}
      - name: Run Cypress tests with built application
        uses: cypress-io/github-action@v1
        with:
          start: docker-compose -f ../../docker-compose.yml up postgres justice_for_rickie_slaughter
          wait-on: "http://127.0.0.1:7000"
          wait-on-timeout: 1500
          working-directory: ./packages/justice-for-rickie-slaughter
        env:
          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
          CYPRESS_AUTH_URL: ${{ secrets.CYPRESS_AUTH_URL }}
          CYPRESS_PORTAL_USER_PASSWORD: ${{ secrets.CYPRESS_PORTAL_USER_PASSWORD }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD }}
  delete_your_data_e2e:
    runs-on: ubuntu-latest
    env:
      AUTH0_CLIENT_ID: ${{ secrets.LOGIC_AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.LOGIC_AUTH0_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.GPR_USERNAME }}
          password: ${{ secrets.GPR_PERSONAL_ACCESS_TOKEN }}
      - name: Run Cypress tests with built application
        uses: cypress-io/github-action@v1
        with:
          start: docker-compose -f ../../docker-compose.yml up postgres delete_your_data
          wait-on: "http://127.0.0.1:7777"
          wait-on-timeout: 1500
          working-directory: ./packages/delete-your-data
        env:
          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
          CYPRESS_AUTH_URL: ${{ secrets.CYPRESS_AUTH_URL }}
          CYPRESS_PORTAL_USER_PASSWORD: ${{ secrets.CYPRESS_PORTAL_USER_PASSWORD }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD }}
