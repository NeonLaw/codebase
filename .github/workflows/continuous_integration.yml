---
name: continuous_integration

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  test_suite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.GPR_USERNAME }}
          password: ${{ secrets.GPR_PERSONAL_ACCESS_TOKEN }}
      - name: Start Docker Compose
        run: docker-compose up -d
        env:
          COMPOSE_HTTP_TIMEOUT: 300
          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
          CYPRESS_AUTH_URL: ${{ secrets.CYPRESS_AUTH_URL }}
          CYPRESS_PORTAL_USER_PASSWORD: ${{ secrets.CYPRESS_PORTAL_USER_PASSWORD }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD}}
      - name: Install depedencies
        run: docker exec shell yarn --cache-folder ./node_modules
      - name: Lint Markdown files.
        run: docker exec shell yarn markdown-lint
      - name: Lint JavaScript files.
        run: docker exec shell yarn lint
      - name: Type-check TypeScript Files.
        run: docker exec shell yarn check-types
      - name: Run Migrations
        run: docker exec shell yarn migrate
        working-directory: ./packages/api
        env:
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/neon_law
      - name: Run PGRita checks
        uses: pgrita/action@main
        env:
          PGRITA_TOKEN: ${{ secrets.PGRITA_TOKEN }}
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/postgres
        with:
          project: neonlaw/codebase
      - name: Run Jest tests and publish coverage to Code Climate.
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          coverageCommand: docker exec shell yarn test
      - name: Check api.tsx file against staging server
        run: |
          docker exec shell yarn graphql-codegen
          git diff --exit-code ./packages/shared-ui/src/utils/api.tsx
      - name: Run Apt-Get
        run: |
          docker exec shell apt-get -qqyy install \
            nodejs \
            yarn \
            postgresql \
            postgresql-contrib \
            libgtk2.0-0 \
            libgtk-3-0 \
            libgbm-dev \
            libnotify-dev \
            libgconf-2-4 \
            libnss3 \
            libxss1 \
            libasound2 \
            libxtst6 \
            xauth \
            xvfb
      - name: Run Cypress tests for the Interface
        run: |
          docker exec shell yarn e2e ./packages/interface \
            --spec ./packages/interface/cypress/interface/pgp.spec.ts
      - name: Run Cypress tests for the JusticeForRickieSlaughter
        run: docker exec shell yarn e2e ./packages/justice-for-rickie-slaughter
      - name: Run Cypress tests for the DeleteYourData
        run: docker exec shell yarn e2e ./packages/delete-your-data
