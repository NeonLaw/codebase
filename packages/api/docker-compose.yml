---
version: "3.8"

services:
  postgres:
    image: postgres:11
    container_name: postgres
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    command: ["postgres", "-c", "log_statement=all"]
    restart: unless-stopped

  api:
    build:
      context: ./
      dockerfile: ./api.Dockerfile
    container_name: api
    depends_on:
      - postgres
    volumes:
      - ./:/app
    ports:
      - 3000:3000
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/neon_law
      - SHADOW_DATABASE_URL=postgres://postgres:password@postgres:5432/neon_law_shadow
      - ROOT_DATABASE_URL=postgres://postgres:password@postgres:5432/postgres
      - AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID
      - AUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET
      - AUTH0_TENANT=neon-law-testing.auth0.com
      - NODE_ENV=production
      - SHOW_GRAPHIQL=true
    restart: unless-stopped

  interface:
    image: neonlaw/interface
    container_name: interface
    restart: unless-stopped
    ports:
      - 8000:80
    logging:
      driver: none

  shell:
    build:
      context: ./
      dockerfile: ./dev.Dockerfile
    container_name: shell
    depends_on:
      - postgres
      - api
    volumes:
      - ./:/app
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/neon_law
      - SHADOW_DATABASE_URL=postgres://postgres:password@postgres:5432/neon_law_shadow
      - ROOT_DATABASE_URL=postgres://postgres:password@postgres:5432/postgres
      - AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID
      - AUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET
      - AUTH0_TENANT=neon-law-testing.auth0.com
      - NODE_ENV=test
    restart: unless-stopped
