---
version: '3.8'

x-environment-variables: &environment-variables
  API_URL: http://127.0.0.1:3000
  AUTH0_CLIENT_ID: $AUTH0_CLIENT_ID
  AUTH0_CLIENT_SECRET: $AUTH0_CLIENT_SECRET
  AUTH0_TENANT: $AUTH0_TENANT
  DATABASE_URL: postgres://postgres:password@postgres:5432/neon_law
  GATSBY_WEBPACK_PUBLICPATH: /
  GOOGLE_APPLICATION_CREDENTIALS: /app/credentials.json
  LOB_API_KEY: $LOB_API_KEY
  LOB_API_SECRET: $LOB_API_SECRET
  NEO4J_URL: bolt://neo4j:7687
  NEON_BOT_SLACK_TOKEN: $NEON_BOT_SLACK_TOKEN
  NODE_ENV: development
  ENVIRONMENT: development
  ROOT_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
  SENDGRID_API_KEY: $SENDGRID_API_KEY
  SHADOW_DATABASE_URL: postgres://postgres:password@postgres:5432/neon_law_shadow
  STRIPE_API_SECRET_KEY: $STRIPE_API_SECRET_KEY
  TRANSLOADIT_KEY: $TRANSLOADIT_KEY
  TRANSLOADIT_SECRET: $TRANSLOADIT_SECRET
  TRANSLOADIT_TEMPLATE_ID: $TRANSLOADIT_TEMPLATE_ID

x-node-volumes: &node-volumes
  - ./:/app
  - ./neon-law-staging.credentials.json:/credentials/credentials.json
  - /app/node_modules/
  - /app/server/node_modules/
  - /app/packages/interface/node_modules/

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: neon_law
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - ./docker/pg-init-scripts:/docker-entrypoint-initdb.d
    command: ['postgres', '-c', 'shared_preload_libraries=pg_stat_statements']
    logging:
      driver: none

  api:
    build:
      context: ./
      dockerfile: ./server/Dockerfile
    restart: always
    depends_on:
      - postgres
    container_name: api
    ports:
      - 3000:3000
    environment:
      <<: *environment-variables
      PROCESS_NAME: api
    volumes: *node-volumes

  workers:
    build:
      context: ./
      dockerfile: ./server/Dockerfile
    restart: always
    depends_on:
      - postgres
    container_name: workers
    environment:
      <<: *environment-variables
      PROCESS_NAME: workers
    volumes: *node-volumes
    command:
      - yarn
      - start:workers

  interface:
    build:
      context: ./
      dockerfile: ./docker/development.interface.Dockerfile
    container_name: interface
    restart: always
    depends_on:
      - api
    ports:
      - 8000:8000
    volumes: *node-volumes
    environment:
      PACKAGE_NAME: interface

  shell:
    ipc: host
    image: docker.pkg.github.com/neonlaw/codebase/base
    container_name: shell
    volumes: *node-volumes
    environment: *environment-variables
    restart: unless-stopped
    depends_on:
      - postgres
